#!/usr/bin/env perl

open(IN, '<', $ENV{OSG_CLEANUP_USER_FILE}) or die("Cannot open $ENV{OSG_CLEANUP_USER_FILE}: $!");
while(<IN>) {
    if(/^(\S+)\s+(\S+)/) {
        my $user = $1;
        my $dir = $2;
        print "Cleaning user $user directory $dir:\n";
        if(-e $dir) {
            chdir($dir);
            my $days = $ENV{OSG_CLEANUP_AGE};

            if(-d ".globus/.gass_cache") {
                print "\tCleaning .globus/.gass_cache\n";

                # On NFS root squash filesystems we cannot delete files as root.  So we will become
                # the user who's home directory we are cleaning before deleting things.
                run_cmd($user, "find .globus/.gass_cache/ -xdev -type f -atime +$days -exec rm -f {} \\;");
                run_cmd($user, "find .globus/.gass_cache/ -xdev -depth -type d -atime +$days -empty -exec rmdir {} \\;");
            }
            else {
                print "\t$dir/.globus/.gass_cache does not exist\n";
            }

            my $jobdir1 = ".globus/$user/.globus/job";
            my $jobdir2 = ".globus/job";
            my $jobdir = "";

            if(-d $jobdir1) {
                $jobdir = $jobdir1;
            } elsif(-d $jobdir2) {
                $jobdir = $jobdir2;
            }
            
            if($jobdir ne "") {
                print "\tCleaning $jobdir\n";

                run_cmd($user, "find $jobdir -xdev -type f -atime +$days -exec rm -f {} \\;");
                run_cmd($user, "find $jobdir -xdev -depth -type d -atime +$days -empty -exec rmdir {} \\;");
            }
            else {
                print "\tNeither $jobdir1 nor $jobdir2 exist\n";
            }

            print "\tCleaning user directory\n";
            run_cmd($user, "find . -maxdepth 1 -xdev -depth -name \"gram_scratch_*\" -type d -atime +$days -exec rm -rf {} \\;");
        }

        sleep(1); # This is in place to make it easier to Ctrl-C out if run interactively
    }
}


sub run_cmd {
    my ($user, $cmd) = @_;

    return system("su - $user -s /bin/bash -c '$cmd'");
}
